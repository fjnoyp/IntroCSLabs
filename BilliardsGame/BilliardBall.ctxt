#BlueJ class context
comment0.params=x\ y\ size\ mass\ canvas
comment0.target=BilliardBall(double,\ double,\ int,\ int,\ objectdraw.DrawingCanvas)
comment1.params=
comment1.target=void\ run()
comment10.params=
comment10.target=double\ getSize()
comment11.params=
comment11.target=double\ getVX()
comment12.params=
comment12.target=double\ getVY()
comment13.params=vx
comment13.target=void\ setVX(double)
comment14.params=vy
comment14.target=void\ setVY(double)
comment15.params=point
comment15.target=boolean\ contains(objectdraw.Location)
comment16.params=dx\ dy
comment16.target=void\ move(double,\ double)
comment17.params=x\ y
comment17.target=void\ moveTo(double,\ double)
comment18.params=point
comment18.target=void\ moveTo(objectdraw.Location)
comment19.params=
comment19.target=objectdraw.Location\ getCenter()
comment2.params=
comment2.target=void\ checkBoundaries()
comment20.params=point
comment20.target=double\ distanceTo(objectdraw.Location)
comment21.params=
comment21.target=int\ getMass()
comment22.params=color
comment22.target=void\ setColor(java.awt.Color)
comment3.params=objectB
comment3.target=void\ collision(BilliardBall)
comment4.params=objectA\ objectB
comment4.target=void\ momentumCollision(BilliardBall,\ BilliardBall)
comment4.text=\ This\ method\ is\ based\ on\ a\ book's\ version\ of\ collisions\ between\ objects\ with\ mass.\ \ I\ did\ not\ come\ up\n\ with\ this\ method\ myself.\ \ The\ idea\ behind\ this\ method\ is\ that\ we\ rotate\ the\ objects'\ positions,\ and\ velocities\ to\ one\ \n\ angle\ of\ rotation.\ \ Afterwards,\ we\ then\ use\ the\ equation\ for\ momentum\ on\ one\ axis\ to\ determine\ the\ reusulting\ velocities.\ \ From\ these\ velocities,\n\ we\ rotate\ back\ our\ results\ to\ whatever\ axis\ of\ rotation\ the\ balls\ were\ moving\ at\ beforehand.\ \ \n\ \n\ the\ equation\ \#*cos+\#*sin\ is\ the\ basic\ equation\ used\ to\ rotate\ the\ object\ by\ a\ certain\ degree.\ \ \n
comment5.params=x1Final\ y1Final\ vx1\ vy1\ cos\ sin\ objectA
comment5.target=void\ react(double,\ double,\ double,\ double,\ double,\ double,\ BilliardBall)
comment6.params=
comment6.target=double\ getX()
comment7.params=
comment7.target=double\ getY()
comment8.params=x
comment8.target=void\ setX(double)
comment9.params=y
comment9.target=void\ setY(double)
numComments=23
